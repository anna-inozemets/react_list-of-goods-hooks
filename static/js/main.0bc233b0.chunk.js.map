{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortType","reorderedGoods","goods","reverse","sort","visibleGoods","good1","good2","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGW,SAARD,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KA+BN,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAAM,mBAA1CC,EAAU,KAAEC,EAAW,KAC9B,EAAgCF,mBAASH,EAASM,MAAK,mBAAhDC,EAAQ,KAAEC,EAAW,KAmBtBC,EA9CR,SACEC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaD,MAAK,SAACE,EAAOC,GACxB,OAAQH,GACN,KAAKZ,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,EAEb,IAEIR,GACFE,EAAaF,UAGRE,CACT,CAuByBO,CACrBnB,EACAG,EACAG,GAGF,OACE,sBAAKc,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAaP,EAASgB,WAEtCQ,QA5BmB,WACzBhB,EAAYR,EAASgB,SACvB,EA0BoC,SAC7B,wBAID,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAaP,EAASkB,SAEtCM,QAnCiB,WACvBhB,EAAYR,EAASkB,OACvB,EAiCkC,SAC3B,mBAID,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAanB,IAEjBoB,QAtDc,WACpBnB,GAAaD,EACf,EAoD+B,SACxB,aAICA,GAAcG,IAAaP,EAASM,OACpC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAnDU,WAClBhB,EAAYR,EAASM,MACrBD,GAAY,EACd,EAgD+B,SACtB,aAML,6BACE,6BACGI,EAAegB,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAM,SAAEA,GAAtBA,EAAgC,UAMrD,ECjIAC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,Q","file":"static/js/main.0bc233b0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  reverse: boolean,\n  sort: SortType,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sort) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (reverse) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleReverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const handleAlphabetSort = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleLengthSort = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    isReversed,\n    sortType,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={handleAlphabetSort}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleLengthSort}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderedGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}